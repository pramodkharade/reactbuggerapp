{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","Classes","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","isFormValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","customer","userId","onOrderBurger","token","checkValidity","rules","isValid","trim","length","test","inputChangedhandler","inputidentifier","updatedOrderForm","updatedFormElement","target","console","log","formIsValid","inputIdentifier","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","index","Input","changed","inValid","shouldValidate","valueType","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","orderData","orderActions","withErrorHandler","axios","Checkout","checkoutContinuedHandler","history","replace","checkoutCancelledHandler","goBack","summary","to","purchasedRedirect","purchased","path","match","component","input","inputElement","inputClasses","InputElement","Invalid","validationError","ValidationError","join","onChange","op","Label","label","module","exports"],"mappings":"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","file":"static/js/3.4f29bcdc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport Classes from './CheckoutSummary.module.css';\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={Classes.CheckoutSummary}>\r\n            <h1>We hope it taste is well!</h1>\r\n            <div style={{\r\n      width: '100%',\r\n      margin: 'auto'\r\n    }}>\r\n        <Burger ingredients={props.ingredients}/>\r\n        <Button\r\n    btnType='Danger'\r\n    clicked={props.checkoutCancelled}>CANCEL</Button>\r\n        <Button\r\n    btnType='Success'\r\n    clicked={props.checkoutContinued}>CONTINUE</Button>\r\n    </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders';\r\nimport Classes from './ContactData.module.css'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as orderActions from '../../../store/actions/index';\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'ZIP Code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 6,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your E-Mail'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            {\r\n              value: 'fastest',\r\n              displayValue: 'Fastest'\r\n            },\r\n            {\r\n              value: 'cheapest',\r\n              displayValue: 'Cheapest'\r\n            }\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true,\r\n        touched: false\r\n      }\r\n    },\r\n    isFormValid: false\r\n  };\r\n  orderHandler =(event) => {\r\n    // console.log('Form Data:', this.props.ingredients, this.props.price);\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      customer: formData,\r\n      userId: this.props.userId\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token, this.props.userId);\r\n  }\r\n  checkValidity=(value, rules) => {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n\r\n  }\r\n  inputChangedhandler = (event, inputidentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputidentifier]\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(event.target.value, updatedFormElement.validation);\r\n    updatedFormElement.touched = true;\r\n    console.log('form Obj Validation::', updatedFormElement);\r\n    updatedOrderForm[inputidentifier] = updatedFormElement;\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({\r\n      orderForm: updatedOrderForm,\r\n      isFormValid: formIsValid\r\n    });\r\n  }\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    let form = (\r\n    <form onSubmit={this.orderHandler}>\r\n          {formElementsArray.map((formElement, index) => {\r\n      return (<Input elementType={formElement.config.elementType}\r\n        key={formElement.id}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        changed={(event) => this.inputChangedhandler(event, formElement.id)}\r\n        inValid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        valueType={formElement.id}/>);\r\n    })}\r\n          <Button btnType='Success' disabled={!this.state.isFormValid}>ORDER</Button>\r\n      </form>);\r\n    if (this.props.loading) {\r\n      form = <Spinner/>;\r\n    }\r\n    return (\r\n      <div className={Classes.ContactData}>\r\n              <h4>Enter your contact data!</h4>\r\n              {form}\r\n          </div>\r\n      );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token, userId) => dispatch(orderActions.purchaseBurger(orderData, token, userId))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from '../Checkout/ContactData/ContactData';\r\nclass Checkout extends Component {\r\n\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  };\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  render() {\r\n    let summary = (<Redirect to='/'/>);\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n      summary = ( <div>\r\n        {purchasedRedirect}\r\n        <CheckoutSummary ingredients = {this.props.ings}\r\n      checkoutCancelled={this.checkoutCancelledHandler}\r\n      checkoutContinued={this.checkoutContinuedHandler}/>\r\n      <Route\r\n      path={this.props.match.path + '/contact-data'}\r\n      component={ContactData}\r\n      /> \r\n      </div>)\r\n    }\r\n    return summary;\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport Classes from './Input.module.css';\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [Classes.InputElement];\r\n  if (props.inValid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(Classes.Invalid);\r\n  }\r\n  let validationError = null;\r\n  if (props.inValid && props.touched) {\r\n    validationError = <p className={Classes.ValidationError}>Please enter a valid {props.valueType}</p>;\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case( 'input'):\r\n      inputElement = <input  className={inputClasses.join(' ')}\r\n      {...props.elementConfig}\r\n      value={props.value} onChange={props.changed}/>\r\n      break;\r\n    case( 'textarea'):\r\n      inputElement = <textarea className={inputClasses.join(' ')}\r\n      {...props.elementConfig}\r\n      value={props.value} onChange={props.changed}/>;\r\n      break;\r\n    case( 'select'):\r\n      inputElement = (<select className={inputClasses.join(' ')}\r\n      value={props.value} onChange={props.changed}>\r\n          {props.elementConfig.options.map((op) => (\r\n        <option key={op.value} value={op.value}>{op.displayValue}</option>\r\n      ))}\r\n      </select>);\r\n      break;\r\n    default:\r\n      inputElement = <input className={inputClasses.join(' ')}\r\n      {...props.elementConfig}\r\n      value={props.value} onChange={props.changed}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={Classes.Input}>\r\n        <label className={Classes.Label}>{props.label}</label>\r\n        {inputElement}\r\n        {validationError}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__8A5wc\",\"Label\":\"Input_Label__38lc5\",\"InputElement\":\"Input_InputElement__3Q6er\",\"Invalid\":\"Input_Invalid__15ZDl\",\"ValidationError\":\"Input_ValidationError__25GVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__22dWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2lAah\",\"Input\":\"ContactData_Input__2Pqua\"};"],"sourceRoot":""}