{"version":3,"sources":["components/Order/Order.js","containers/Order/Orders.js","components/Order/Order.module.css"],"names":["Order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ik","key","style","textTransform","display","margin","border","padding","className","Classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrder","token","userId","ordersload","Spinner","loading","orders","order","id","Component","connect","state","auth","dispatch","orderAction","withErrorHandler","axios","module","exports"],"mappings":"8LA2BeA,EAzBD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAG9B,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACxC,OAAO,0BACLC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QACPP,EAAGJ,KARF,KAQUI,EAAGH,OARb,QAUT,OAAQ,yBAAKW,UAAWC,IAAQlB,OAC9B,0CAAgBO,GACpB,qCAAU,uCAAaY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,O,gCChBxDC,E,kLAGFC,KAAKvB,MAAMwB,aAAaD,KAAKvB,MAAMyB,MAAOF,KAAKvB,MAAM0B,U,+BAGrD,IAAIC,EAAa,kBAACC,EAAA,EAAD,MAMjB,OALKL,KAAKvB,MAAM6B,UACdF,EAAaJ,KAAKvB,MAAM8B,OAAOvB,KAAI,SAACwB,GAAD,OAAY,kBAAC,EAAD,CAAOtB,IAAKsB,EAAMC,GAC/D/B,YAAa8B,EAAM9B,YACnBmB,MAAOW,EAAMX,YAET,6BACLO,O,GAbcM,aA8BNC,uBAbS,SAAAC,GACtB,MAAO,CACLL,OAAQK,EAAMJ,MAAMD,OACpBD,QAASM,EAAMJ,MAAMF,QACrBJ,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,WAGI,SAAAW,GACzB,MAAO,CACLb,aAAc,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAwBb,EAAOC,QAG9DQ,CAA6CK,YAAiBjB,EAAQkB,O,mBCpCrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.cc0c48c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Classes from './Order.module.css';\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n  const ingredientsOutput = ingredients.map(ik => {\r\n    return <span\r\n      key={ik.name}\r\n      style={{\r\n        textTransform: 'capitalize',\r\n        display: 'inline-block',\r\n        margin: '0 8px',\r\n        border: '1px solid #ccc',\r\n        padding: '5px'\r\n      }}>{ik.name} ({ik.amount})</span>;\r\n  });\r\n  return (<div className={Classes.Order}> \r\n    <p>Ingredient: {ingredientsOutput}</p>\r\n<p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n</div>);\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as orderAction from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrder(this.props.token, this.props.userId);\r\n  }\r\n  render() {\r\n    let ordersload = <Spinner/>;\r\n    if (!this.props.loading) {\r\n      ordersload = this.props.orders.map((order) => (<Order key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={order.price} />));\r\n    }\r\n    return (<div>\r\n      {ordersload}\r\n    </div>)\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrder: (token, userId) => dispatch(orderAction.fetchOrders(token, userId))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3L_yt\"};"],"sourceRoot":""}